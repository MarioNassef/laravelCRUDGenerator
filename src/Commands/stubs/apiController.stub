<?php

namespace App\Http\Controllers;

use App\DummyModel;
use Alert;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Validator;

class DummyModelApiController extends Controller
{

        public function ReturnAllDummyModel(Request $request)
        {
            $limit = $request->has('limit') ? $request->limit : 10;
            $offset = $request->has('offset') ? $request->offset : 0;
            $items = DummyModel::limit($limit)->offset($offset)->get();
            return MyResponse(1, $items, MassageEn()[1], 200);
        }

        /**
         *
         * @return \Illuminate\Http\Response
         */
        public function ReturnDummyModelById(Request $request)
        {
            $itemId = $request->id;
            $item = DummyModel::where('id',$itemId)->first();
            if(!$item){
            return MyResponse(7, null, MassageEn()[7], 203);
            }
            return MyResponse(1, $item, MassageEn()[1], 200);
        }

        /**
         *
         * @return \Illuminate\Http\Response
         */
        public function CreateDummyModel(Request $request)
        {
            $data = $request->all();
            $DummyModel = new DummyModel;
            validate($data, $DummyModel->validation, true);
            $DummyModel->save($data);
            return MyResponse(1, $DummyModel, MassageEn()[1], 200);

        }

        /**
         *
         * @return \Illuminate\Http\Response
         */
        public function UpdateDummyModel(Request $request)
        {
             $itemId = $request->id;
             $data = $request->all();
             $item = DummyModel::where('id',$itemId)->first();
              if(!$item){
                 return MyResponse(7, null, MassageEn()[7], 203);
              }
             $DummyModel = new DummyModel;
             validate($data, $DummyModel->validation, true);
             $DummyModel->save($data);
             return MyResponse(1, $DummyModel, MassageEn()[1], 200);
        }
}
